name: CI/CD

on:
  push:
    branches:
      - master

env:
  DOCKER_IMAGE: your-dockerhub-username/forya-be

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU (multiarch)
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            ${{ env.DOCKER_IMAGE }}:latest
            ${{ env.DOCKER_IMAGE }}:${{ github.sha }}

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'v1.28.0'

      - name: Decode kubeconfig
        env:
          KUBECONFIG_DATA: ${{ secrets.KUBECONFIG }}
        run: |
          echo "$KUBECONFIG_DATA" | base64 --decode > kubeconfig
          export KUBECONFIG=$PWD/kubeconfig
          kubectl version --client

      - name: Set image in kustomize overlay
        run: |
          kubectl --kubeconfig=kubeconfig -n forya set image deployment/forya-be forya-be=${{ env.DOCKER_IMAGE }}:${{ github.sha }} || true
          # or use kustomize build and apply:
          # envsubst in a manifest or use kapp/helm

      - name: Apply kustomize
        run: |
          export KUBECONFIG=$PWD/kubeconfig
          kubectl apply -k k8s/overlays/prod
